/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.30
 * Generated at: 2024-11-13 11:13:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class Profile_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"ISO-8859-1\">\n");
      out.write("<title>My Profile</title>\n");
      out.write("<link\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\n");
      out.write("	rel=\"stylesheet\"\n");
      out.write("	integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\"\n");
      out.write("	crossorigin=\"anonymous\">\n");
      out.write("<style>\n");
      out.write("body {\n");
      out.write("	background-color: #008080; /* Secondary: White background */\n");
      out.write("	color: #4a4a4a; /* Secondary: Gray for text */\n");
      out.write("}\n");
      out.write("\n");
      out.write(".custom-card {\n");
      out.write("	max-width: 800px;\n");
      out.write("	height: 500px;\n");
      out.write("	background-color: #fef9e7; /* Light gray for card background */\n");
      out.write("	border: 2px solid #ff8c00; /* Orange border for the card */\n");
      out.write("	border-radius: 15px;\n");
      out.write("	box-shadow: 0 0 15px rgba(0, 0, 0, 0.1); /* Light shadow */\n");
      out.write("}\n");
      out.write("\n");
      out.write(".card-body {\n");
      out.write("	font-size: 1.2rem;\n");
      out.write("	background-color: #fef9e7;\n");
      out.write("	/* Light yellow for a soft, vibrant background */\n");
      out.write("}\n");
      out.write("\n");
      out.write(".card-img {\n");
      out.write("	width: 100%;\n");
      out.write("	height: 100%;\n");
      out.write("	object-fit: cover;\n");
      out.write("	border-radius: 15px 0 0 15px;\n");
      out.write("	border-right: 5px solid #008080; /* Teal border separating image */\n");
      out.write("}\n");
      out.write("\n");
      out.write(".card-title {\n");
      out.write("	text-align: center;\n");
      out.write("	font-size: 2rem;\n");
      out.write("	color: #ff8c00; /* Vibrant orange for title */\n");
      out.write("	margin-bottom: 15px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".card-text {\n");
      out.write("	color: #4a4a4a; /* Secondary Gray text */\n");
      out.write("	margin-bottom: 10px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".col-md-4 {\n");
      out.write("	height: 100%;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".row.g-0 {\n");
      out.write("	height: 100%;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".btn-close {\n");
      out.write("	position: absolute;\n");
      out.write("	top: 20px;\n");
      out.write("	left: 20px;\n");
      out.write("	width: 30px;\n");
      out.write("	height: 30px;\n");
      out.write("	background-color: #ff8c00; /* Orange for the close button */\n");
      out.write("	color: #ffffff; /* White icon */\n");
      out.write("	font-size: 1.2rem;\n");
      out.write("	border: none;\n");
      out.write("	border-radius: 50%;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".btn-close:hover {\n");
      out.write("	background-color: #ffcc00; /* Hover effect with yellow */\n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("</head>\n");
      out.write("<body class=\"d-flex justify-content-center align-items-center\"\n");
      out.write("	style=\"height: 100vh;\">\n");
      out.write("	");
      out.write("\n");
      out.write("	<button type=\"button\" class=\"btn-close\" aria-label=\"Close\"\n");
      out.write("		onclick=\"window.location.href='home.html';\"></button>\n");
      out.write("\n");
      out.write("	");
 String gender = (String) request.getAttribute("gender"); 
      out.write("\n");
      out.write("\n");
      out.write("	<div class=\"card custom-card mb-3\">\n");
      out.write("		<div class=\"row g-0\">\n");
      out.write("			<div class=\"col-md-4 d-flex\">\n");
      out.write("				");
      out.write("\n");
      out.write("				<img\n");
      out.write("					src=\"");
      out.print( gender != null && gender.equals("male") ? request.getContextPath() + "/images/user_profile_boy.jpg" : request.getContextPath() + "/images/user_profile.jpg" );
      out.write("\"\n");
      out.write("					class=\"img-fluid rounded-start card-img\" alt=\"User Profile Image\">\n");
      out.write("			</div>\n");
      out.write("			<div class=\"col-md-8\">\n");
      out.write("				<div class=\"card-body\">\n");
      out.write("					<h5 class=\"card-title\">My Profile</h5>\n");
      out.write("					<p class=\"card-text\">\n");
      out.write("						<B>Name: </B>");
      out.print( request.getAttribute("name") );
      out.write("<br> <B>Email:\n");
      out.write("						</B>");
      out.print( request.getAttribute("email"));
      out.write("<br> <B>DOB: </B>");
      out.print( request.getAttribute("dob") );
      out.write("<br>\n");
      out.write("						<B>Age: </B>");
      out.print( request.getAttribute("age") );
      out.write("<br> <B>Gender:\n");
      out.write("						</B>");
      out.print( request.getAttribute("gender") );
      out.write("<br> <B>Contact: </B>");
      out.print( request.getAttribute("phone") );
      out.write("<br>\n");
      out.write("						<B>Job: </B>");
      out.print( request.getAttribute("occupation") );
      out.write("<br> <B>Stay\n");
      out.write("							city: </B>");
      out.print( request.getAttribute("city") );
      out.write("<br> <B>Stay\n");
      out.write("							area: </B>");
      out.print( request.getAttribute("area") );
      out.write("<br> <B>Diet: </B>");
      out.print( request.getAttribute("diet") );
      out.write("<br>\n");
      out.write("						<B>Smoke: </B>");
      out.print( request.getAttribute("smoke") );
      out.write("<br> <B>Drink:\n");
      out.write("						</B>");
      out.print( request.getAttribute("drink") );
      out.write("</p>\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("		</div>\n");
      out.write("	</div>\n");
      out.write("	<script\n");
      out.write("		src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\"\n");
      out.write("		integrity=\"sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz\"\n");
      out.write("		crossorigin=\"anonymous\"></script>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
