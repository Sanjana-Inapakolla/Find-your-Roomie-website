/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.30
 * Generated at: 2024-11-13 11:13:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class update_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"ISO-8859-1\">\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\">\n");
      out.write("<title>Update Details</title>\n");
      out.write("<style>\n");
      out.write("    * {\n");
      out.write("        margin: 0;\n");
      out.write("        padding: 0;\n");
      out.write("        box-sizing: border-box;\n");
      out.write("    }\n");
      out.write("    body {\n");
      out.write("        font-family: Arial, sans-serif;\n");
      out.write("        background-color: #008080;\n");
      out.write("        display: flex;\n");
      out.write("        justify-content: center;\n");
      out.write("        align-items: center;\n");
      out.write("        height: 100vh;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    #update-form {\n");
      out.write("        background-color: #ffffff;\n");
      out.write("        padding: 20px 40px;\n");
      out.write("        border-radius: 10px;\n");
      out.write("        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n");
      out.write("        width: 100%;\n");
      out.write("        max-width: 900px;\n");
      out.write("        border-left: 10px solid #FFB300; /* Orange border */\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    #update-form h2 {\n");
      out.write("        font-size: 24px;\n");
      out.write("        color: #333333;\n");
      out.write("        margin-bottom: 20px;\n");
      out.write("        text-align: center;\n");
      out.write("        color: #00796B; /* Teal */\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    #update-form label {\n");
      out.write("        font-size: 14px;\n");
      out.write("        color: #666666;\n");
      out.write("        display: block;\n");
      out.write("        margin-bottom: 5px;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    #update-form input[type=\"text\"],\n");
      out.write("    #update-form input[type=\"email\"],\n");
      out.write("    #update-form input[type=\"tel\"],\n");
      out.write("    #update-form select {\n");
      out.write("        width: 100%;\n");
      out.write("        padding: 10px;\n");
      out.write("        margin-bottom: 15px;\n");
      out.write("        border: 1px solid #dddddd;\n");
      out.write("        border-radius: 5px;\n");
      out.write("        font-size: 14px;\n");
      out.write("        color: #333333;\n");
      out.write("        transition: all 0.3s ease;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    #update-form input[type=\"text\"]:focus,\n");
      out.write("    #update-form input[type=\"email\"]:focus,\n");
      out.write("    #update-form input[type=\"tel\"]:focus,\n");
      out.write("    #update-form select:focus {\n");
      out.write("        border-color: #FFB300; /* Orange border on focus */\n");
      out.write("        outline: none;\n");
      out.write("        box-shadow: 0 0 5px rgba(255, 179, 0, 0.3);\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    #update-form button {\n");
      out.write("        width: 100%;\n");
      out.write("        padding: 10px;\n");
      out.write("        background-color: #FFA000; /* Orange button */\n");
      out.write("        border: none;\n");
      out.write("        border-radius: 5px;\n");
      out.write("        color: #ffffff;\n");
      out.write("        font-size: 16px;\n");
      out.write("        cursor: pointer;\n");
      out.write("        transition: background-color 0.3s ease;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    #update-form button:hover {\n");
      out.write("        background-color: #FF6F00; /* Darker orange on hover */\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    @media (max-width: 480px) {\n");
      out.write("        #update-form {\n");
      out.write("            padding: 15px 20px;\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .btn-close {\n");
      out.write("        position: absolute;\n");
      out.write("        background-color: #ff8c00; /* Orange for the close button */\n");
      out.write("		color: #ffffff; /* White icon */\n");
      out.write("        top: 20px;\n");
      out.write("        left: 20px;\n");
      out.write("        width: 30px; \n");
      out.write("        height: 30px; \n");
      out.write("        font-size: 1.2rem;\n");
      out.write("    }\n");
      out.write("    .btn-close:hover {\n");
      out.write("	background-color: #ffcc00; /* Hover effect with yellow */\n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<button type=\"button\" class=\"btn-close\" aria-label=\"Close\" onclick=\"window.location.href='home.html';\"></button>\n");
      out.write("<div id=\"update-form\">\n");
      out.write("\n");
      out.write("<form method=\"post\" action=\"AfterUpdate\">\n");
      out.write("<h2>Update My Profile</h2>\n");
      out.write("\n");
      out.write(" <label for=\"name\">Name:</label>\n");
      out.write(" <input type=\"text\" id=\"name\" name=\"name\" value=\"");
      out.print( request.getAttribute("name") );
      out.write("\" readonly>\n");
      out.write(" \n");
      out.write(" <label for=\"email\">Email:</label>\n");
      out.write(" <input type=\"email\" id=\"email\" name=\"email\" value=\"");
      out.print( request.getAttribute("email") );
      out.write("\" readonly>\n");
      out.write(" \n");
      out.write(" <label for=\"phone\">Contact Number:</label>\n");
      out.write(" <input type=\"tel\" id=\"phone\" name=\"phone\" value=\"");
      out.print( request.getAttribute("phone") );
      out.write("\">\n");
      out.write("\n");
      out.write(" <label for=\"city\">Where to stay?</label> \n");
      out.write(" <select name=\"city\" id=\"city\" onchange=\"loadAreas()\" >\n");
      out.write("     <option value=\"\">");
      out.print( request.getAttribute("city") );
      out.write("</option>\n");
      out.write("     <option value=\"pune\">Pune</option>\n");
      out.write("     <option value=\"bangalore\">Bangalore</option>\n");
      out.write("     <option value=\"chennai\">Chennai</option>\n");
      out.write(" </select>\n");
      out.write("\n");
      out.write(" <label for=\"area\">Area:</label> \n");
      out.write(" <select name=\"area\" id=\"area\" required>\n");
      out.write("     <option value=\"\">");
      out.print( request.getAttribute("area") );
      out.write("</option>\n");
      out.write(" </select>\n");
      out.write("\n");
      out.write(" <label for=\"occupation\">Occupation:</label> \n");
      out.write(" <select name=\"occupation\" id=\"occupation\" onchange=\"loadDetails()\" required>\n");
      out.write("     <option value=\"\">");
      out.print( request.getAttribute("job") );
      out.write("</option>\n");
      out.write("     <option value=\"student\">Student</option>\n");
      out.write("     <option value=\"working\">Working professional</option>\n");
      out.write("     <option value=\"graduate\">Graduate</option>\n");
      out.write(" </select>\n");
      out.write(" \n");
      out.write(" <button type=\"submit\">Update Profile</button>\n");
      out.write("</form>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("const areas = {\n");
      out.write("    pune: [\"Kothrud\", \"Viman Nagar\", \"Pune Camp\", \"Baner\", \"Hinjewadi\", \"FC Road\", \"Karve Nagar\"],\n");
      out.write("    bangalore: [\"Koramangala\", \"Indiranagar\", \"Whitefield\", \"Jayanagar\", \"MG Road\"],\n");
      out.write("    chennai: [\"Adyar\", \"T Nagar\", \"Mylapore\", \"Anna Nagar\", \"Besant Nagar\"]\n");
      out.write("};\n");
      out.write("\n");
      out.write("function loadAreas(){\n");
      out.write("    var city = document.getElementById('city').value;\n");
      out.write("    var areaSelect = document.getElementById('area');\n");
      out.write("    areaSelect.innerHTML = \"<option value=''>Select Area</option>\"; \n");
      out.write("    if (city) {\n");
      out.write("        var cityAreas = areas[city] || [];\n");
      out.write("        cityAreas.forEach(function(area) {\n");
      out.write("            var option = document.createElement('option');\n");
      out.write("            option.value = area;\n");
      out.write("            option.text = area;\n");
      out.write("            areaSelect.appendChild(option);\n");
      out.write("        });\n");
      out.write("    }\n");
      out.write("}\n");
      out.write("</script>\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz\" crossorigin=\"anonymous\"></script>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
